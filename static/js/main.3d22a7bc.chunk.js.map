{"version":3,"sources":["media/Elyse_Shackleton_Resume_June_2018.pdf","components/images/inner_pi.png","screens/RecipeScaler.js","screens/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RecipeScaler","state","ingredients","scalingToggle","display","tempDisplay","handleChange","event","_this","setState","target","value","handleClick","react_default","a","createElement","className","this","type","onChange","bind","Button_default","onClick","React","Component","Home","href","rel","flex","src","inner_pi","alt","App","react_router_dom","width","variant","to","DropdownButton_default","as","ButtonGroup","title","id","Dropdown_default","Item","eventKey","agent_file","download","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d22a7bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Elyse_Shackleton_Resume_June_2018.1819b79a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/inner_pi.cf5106c3.png\";","import React, { Component } from 'react';\nimport '../App.css';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport agent_file from '../media/Elyse_Shackleton_Resume_June_2018.pdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport App from '../App.js';\n\n\nclass RecipeScaler extends React.Component {\n\nstate = {ingredients: [], scalingToggle: false, display: 'WIP', tempDisplay: ''};\n\n\nhandleChange = (event) => {\n  this.setState({tempDisplay: event.target.value});\n}\n\nhandleClick = () => {\n  this.setState({display: this.state.tempDisplay})\n}\n\n  render() {\n    return (\n      <div className=\"recipewrapper\">\n        <label> Recipe Scaler </label>\n        <br/>\n        <label> {this.state.display} </label>\n        <br/>\n        <input type=\"text\" onChange={this.handleChange.bind(this)}></input> <input></input>\n        <br/>\n        <input></input> <input></input>\n        <br/>\n        <input></input> <input></input>\n        <br/>\n        <input></input> <input></input>\n        <br/>\n        <input></input> <input></input>\n        <br/>\n        <input></input> <input></input>\n        <br/>\n        <br/>\n        <Button onClick={this.handleClick}>Finalize!</Button>\n      </div>\n    );\n  }\n}\nexport default RecipeScaler;\n","import inner_pi from '../components/images/inner_pi.png';\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport agent_file from '../media/Elyse_Shackleton_Resume_June_2018.pdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport RecipeScaler from '../screens/RecipeScaler.js';\n\n\nclass Home extends React.Component {\n    render() {\n      return (\n        <div>\n        <p>Follow @ <a \n        className=\"App-link\"\n        href=\"https://twitter.com/elyseshackleton\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n      Twitter</a>,  <a \n        className=\"App-link\"\n        href=\"https://instagram.com/elyshack\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n      Instagram\n      </a>\n      </p>\n      <div>\n      <img flex=\"1\"\n      src={inner_pi} className=\"App-logo\" alt=\"logo\"/>\n      </div>\n      <p>\n        <highlight>Fight me irl</highlight>\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://elyshack.github.io/testpage\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Test Page Link\n      </a>\n      </div>\n      );\n    }\n  }\n  export default Home;","import inner_pi from './components/images/inner_pi.png';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport agent_file from './media/Elyse_Shackleton_Resume_June_2018.pdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport RecipeScaler from './screens/RecipeScaler.js';\nimport Home from './screens/Home.js';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {/* <Heading /> */}\n\n          <Router>\n          <div>\n          <view width=\"98vw\">\n          <code>\n          <h3 className=\"Title\">Elyse Shackleton Code Portfolio </h3>\n          <div className=\"Button-bar\">\n              <Button href=\"https://elyshack.github.io/portfolio\" variant=\"outline-primary\">\n                <Link className=\"link\" to=\"/portfolio/\"> Home </Link>\n                </Button>\n                  <DropdownButton variant=\"outline-primary\" as={ButtonGroup} title=\"Projects\" id=\"bg-nested-dropdown\">\n                      <Dropdown.Item eventKey=\"1\" href=\"https://elyshack.github.io/testpage\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\">Html test page</Dropdown.Item>\n                         <Dropdown.Item eventKey=\"2\"> <Link className=\"sublink\" to=\"/portfolio/recipe\">Recipe Scaler</Link> </Dropdown.Item>\n                         <Dropdown.Item eventKey=\"3\">Album</Dropdown.Item>\n                  </DropdownButton>\n\n              <Button href={agent_file} variant=\"outline-primary\" download=\"Elyse_Shackleton_Resume_June_2018.pdf\">Resume</Button>\n          </div>        \n          </code>\n          </view>\n          <div>\n          <hr className=\"Line-break\"/>\n          </div>\n          </div>\n\n          <Route exact path=\"/portfolio/\" component={Home} />\n          <Route path=\"/portfolio/recipe\" component={RecipeScaler} />\n\n        </Router>\n\n      </header>\n      </div>\n          \n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}